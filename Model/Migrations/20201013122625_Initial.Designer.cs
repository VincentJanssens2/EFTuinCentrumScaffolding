// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Model.Migrations
{
    [DbContext(typeof(EFTuincentrumContext))]
    [Migration("20201013122625_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Leveranciers", b =>
                {
                    b.Property<int>("LevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PostNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Woonplaats")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("LevId")
                        .HasName("Leveranciers$PrimaryKey");

                    b.ToTable("Leveranciers");
                });

            modelBuilder.Entity("Model.Planten", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("LevId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("SoortId")
                        .HasColumnType("int");

                    b.Property<decimal>("VerkoopPrijs")
                        .HasColumnType("money");

                    b.HasKey("PlantId")
                        .HasName("Planten$PrimaryKey");

                    b.HasIndex("LevId");

                    b.HasIndex("SoortId");

                    b.ToTable("Planten");
                });

            modelBuilder.Entity("Model.Soorten", b =>
                {
                    b.Property<int>("SoortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("MagazijnNr")
                        .HasColumnType("tinyint");

                    b.Property<string>("Soort")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("SoortId")
                        .HasName("Soorten$PrimaryKey");

                    b.ToTable("Soorten");
                });

            modelBuilder.Entity("Model.Planten", b =>
                {
                    b.HasOne("Model.Leveranciers", "Lev")
                        .WithMany("Planten")
                        .HasForeignKey("LevId")
                        .HasConstraintName("Planten$LeveranciersPlanten")
                        .IsRequired();

                    b.HasOne("Model.Soorten", "Soort")
                        .WithMany("Planten")
                        .HasForeignKey("SoortId")
                        .HasConstraintName("Planten$SoortenPlanten")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
